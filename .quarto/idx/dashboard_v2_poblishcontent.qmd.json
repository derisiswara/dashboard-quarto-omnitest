{"title":"X University","markdown":{"yaml":{"title":"X University","format":"dashboard","logo":"logods2.webp","fig-width":10,"fig-asp":0.3,"theme":["sandstone","themes/dashboard.scss"]},"headingText":"Memuat data","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(shiny)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(DT)\n```\n\n```{r}\ndf1 <- read_excel(\"teskepribadian_export_20241021.xlsx\")\n```\n\n```{r}\n# Cek NA\n#sum(is.na(df1$Fakultas))\n#sum(is.na(df1$ProgramStudi))\n```\n\n```{r}\n# Delete data if \"current_distress\", \"variable_response_inconsistency\" >= 70\ndf1 <- df1[!(df1$variable_response_inconsistency >= 70),]\n```\n\n\n```{r}\n# Preproses data - Hapus Kata Fakultas di Kolom Fakultas\ndf1$Fakultas <- gsub(\"Fakultas \", \"\", df1$Fakultas)\n\ndf1 <- df1 |>\n  # Delete duplicate rows if all column values are the same\n  distinct(.keep_all = TRUE)\n\n\n\ndf1[df1$Fakultas == \"Komunikasi Dan Ilmu Sosial\",\"Fakultas\"] <- \"Komunikasi dan Ilmu Sosial\"\n#  unique(df1$ProgramStudi)\n```\n\n\n```{r}\n## Cek jumlah duplikat nrp\nlibrary(dplyr)\n\n# Cari NRP yang duplikat\nduplikat_nrp <- df1 %>%\n  group_by(nrp) %>%\n  filter(n() > 1) %>%\n  ungroup()\n```\n\n```{r}\ndf1_raw <- df1\n# nrow(df1)\n# nrow(duplikat_nrp)\n# df1$nrp\n# df1$name\n# df1$faculty\n# tab(df1[,4:47]\n```\n\n```{r}\n#nrow(df1_raw)\n#nrow(df1)\n#length(unique(df1$faculty))\n#sum(!is.na(df1$faculty))\n```\n#  {.sidebar}\n\nDasbor ini menampilkan statistik untuk:\n\n**Hasil Tes Tipe Kepribadian dan Gangguan Kepribadian Mahasisswa X University**\n\n------------------------------------------------------------------------\n\n|                          |     |\n|--------------------------|-----|\n| **Jumlah Reponden** |  39259 |\n| **Data Valid (VI > 70)**            |  34625 |\n| **Data Valid dan Tidak Duplikat**            |  31667 |\n| **Fakultas**               |  7 |\n| **Program Studi**       |  53 |\n------------------------------------------------------------------------\n\nKeterangan:\n\n- VI = Variable Response Inconsistency\n\n- Dari 31667 terdapat 2495 mahasiswa 2x tes OMNI \n\n::: {.callout-note collapse=\"true\"}\n\n## Disclaimer\n\nInventori Kepribadian OMNI (OMNI Personality Inventory) adalah kuesioner self-report yang mengukur ciri-ciri kepribadian normal dan abnormal pada orang dewasa dan remaja berusia 18â€“74 tahun:\n\n- Jumlah item: 375 item\n- Konstruk Faktor: 7 ciri\n- Konstruk Normal: 25 ciri\n- Gangguan Kepribadian: 10 ciri\n\n[https://doi.org/10.1177/0734282905285789](https://doi.org/10.1177/0734282905285789)\n\n:::\n\n```{r}\ndf1$faculty <- df1$Fakultas\ndf1 <- df1[,-c(1,4)]\n```\n\n```{r}\ndf_Normal <- df1[,c(1:3,4:28)] # Tes Normal\ndf_Gangguan <- df1[,c(1:3,29:38)] # Tes Gangguan\ndf_Faktor <- df1[,c(1:3,39:45)] # Tes Faktor\ndf_Validitas <- df1[,c(1:3,46:47)] # Tes Validitas\n```\n\n# Pengantar\n## Row {height=\"20%\"}\n```{r}\n#| label: Demografi\n#| results: hide\n# Hitung jumlah mahssis tanpa fakutlas\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 0)\nn_total <- nrow(df1)\nn_dis <- nrow(df1_abnormal)\nprop0 <- n_dis / n_total * 100\n\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 1)\nn_total <- nrow(df1)\nn_dis <- nrow(df1_abnormal)\nprop1 <- n_dis / n_total * 100\n\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 4)\nn_total <- nrow(df1)\nn_dis <- nrow(df1_abnormal)\nprop2 <- n_dis / n_total * 100\n```\n\n\n\n```{r}\n#| component: valuebox\n#| title: \"Proporsi Mahasiswa dengan Gangguan Kepribadian (Minimal 1)\"\n\nlist(\n  icon = \"person\",\n  color = \"red\",\n  value = paste0(round(prop0, 1), \"%\",\" \", \"(\", prop0/100*nrow(df1),\")\")\n)\n```\n```{r}\n#| component: valuebox\n#| title: \"Proporsi Mahasiswa dengan >1 Gangguan Kepribadian\"\n\nlist(\n  icon = \"person\",\n  color = \"yellow\",\n  value = paste0(round(prop1, 1), \"%\",\" \", \"(\", prop1/100*nrow(df1),\")\")\n)\n```\n```{r}\n#| component: valuebox\n#| title: \"Proporsi Mahasiswa dengan >4 Gangguan Kepribadian\"\n\nlist(\n  icon = \"person\",\n  color = \"primary\",\n  value = paste0(round(prop2, 1), \"%\",\" \", \"(\", prop2/100*nrow(df1),\")\")\n)\n```\n\n## Row {height=\"80%\"}\n### Column {width=\"40%\"}\n#### Row {height=\"60%\"}\n```{r}\n#| title: Kategori Skor Sifat Normal dan Faktor\n\n## Load necessary library\nlibrary(DT)\n\n# Create a data frame with the translated categories, keeping original column names\ndata <- data.frame(\n  \"Rentang Skor\" = c(\"< 35\", \"35-44\", \"45-55\", \"56-65\", \">65\"),\n  \"Kategori\" = c(\"Rendah\", \"Rata-rata rendah\", \"Rata-rata\", \n                 \"Rata-rata tinggi\", \"Tinggi\"),\n  check.names = FALSE  # Preserve column names with spaces\n)\n\n# Display the table with DT for a visually appealing format\ndatatable(data, \n          options = list(pageLength = 5, # Sets number of rows per page\n                         dom = 't'), # Hides the search bar and pagination,\n          rownames = T) %>% \n  formatStyle(columns = c(\"Rentang Skor\", \"Kategori\"),\n              backgroundColor = styleEqual(c(\"< 35\", \"35-44\", \"45-55\", \"56-65\", \">65\"),\n                                           c( \"#FFD1A1\", \"#FFC081\", \"#FFA561\", \"#FF8E41\", \"#FF6E21\")))\n```\n#### Row {height=\"40%\"}\n```{r}\n#| title: Kategori Skor Gangguan Kepribadian\n\n## Load necessary library\nlibrary(DT)\n\n# Create a data frame with the translated categories, keeping original column names\ndata <- data.frame(\n  \"Rentang Skor\" = c(\"<70\", \">=70\"),\n  \"Kategori\" = c(\"Normal\", \"Gangguan Kepribadian\"),\n  check.names = FALSE  # Preserve column names with spaces\n)\n\n# Display the table with DT for a visually appealing format\ndatatable(data, \n          options = list(pageLength = 5, # Sets number of rows per page\n                         dom = 't'), # Hides the search bar and pagination,\n          rownames = T) %>% \n  formatStyle(columns = c(\"Rentang Skor\", \"Kategori\"),\n              backgroundColor = styleEqual(c(\"<70\", \">=70\"),\n                                           c( \"#FFD1A1\", \"#FF6E21\")))\n```\n\n### Column {width=\"60%\"}\n\n```{r}\n#| title: OMNI Personality Inventory\n# Displaying the image using Markdown syntax\nknitr::include_graphics(\"omni.png\")\n```\n\n# Demografi\n```{r}\n# Seed untuk reproduksi hasil yang sama (opsional)\nset.seed(20250503)\n\n# Buat nama fakultas random\nrandom_fakultas_names <- c(\n  \"Fakultas Sains dan Teknologi\", \"Fakultas Humaniora\", \"Fakultas Kedokteran\",\n  \"Fakultas Pertanian\", \"Fakultas Hukum\", \"Fakultas Psikologi\", \n  \"Fakultas Seni Rupa\"\n)\n\n# Acak urutan nama fakultas random\nfakultas <- unique(df1$faculty)\nrandom_fakultas <- sample(random_fakultas_names, length(fakultas), replace = FALSE)\n\n# Buat mapping dari fakultas asli ke fakultas acak\nfakultas_map <- setNames(random_fakultas, fakultas)\n```\n\n```{r}\n# Membuat nama-nama random untuk program studi\n# Contoh prefiks untuk jenjang pendidikan\njenjang <- c(\"S1\", \"S2\", \"D3\", \"D4\")\n\n# Contoh nama-nama program studi acak\nnama_program <- c(\n  \"Biologi\", \"Matematika\", \"Fisika\", \"Kimia\", \"Astronomi\", \n  \"Akuntansi\", \"Manajemen\", \"Ekonomi\", \"Bisnis Digital\", \"Keuangan\",\n  \"Hukum\", \"Ilmu Politik\", \"Administrasi Publik\", \"Hubungan Internasional\",\n  \"Psikologi\", \"Sosiologi\", \"Antropologi\", \"Arkeologi\", \"Filsafat\",\n  \"Sastra Indonesia\", \"Sastra Inggris\", \"Sastra Jepang\", \"Sastra Mandarin\",\n  \"Kedokteran\", \"Kedokteran Gigi\", \"Farmasi\", \"Kesehatan Masyarakat\", \"Keperawatan\",\n  \"Arsitektur\", \"Teknik Sipil\", \"Teknik Lingkungan\", \"Perencanaan Wilayah\",\n  \"Ilmu Komputer\", \"Sistem Informasi\", \"Teknik Informatika\", \"Data Science\",\n  \"Desain Grafis\", \"Desain Interior\", \"Seni Murni\", \"Fotografi\", \"Animasi\",\n  \"Pertanian\", \"Peternakan\", \"Kehutanan\", \"Perikanan\", \"Agribisnis\",\n  \"Pariwisata\", \"Perhotelan\", \"Kuliner\", \"Media dan Komunikasi\", \"Jurnalistik\"\n)\n\n# Membuat kombinasi random untuk program studi\nprogram_studi <- unique(df1$ProgramStudi)\nsample_jenjang <- sample(jenjang, length(program_studi), replace = TRUE)\nsample_program <- sample(nama_program, length(program_studi), replace = TRUE)\nrandom_program_baru <- paste(sample_jenjang, sample_program)\n\n# Membuat mapping dengan nama-nama baru\nprogram_studi_map_baru <- setNames(random_program_baru, program_studi)\n\n# Terapkan mapping ke dataframe asli\ndf1$faculty <- fakultas_map[df1$faculty]\ndf1$ProgramStudi <- program_studi_map_baru[df1$ProgramStudi]  # atau program_studi_map_baru\n```\n\n## Row {height=\"50%\"}\n### Column {width=\"50%\"}\n```{r}\n#| title: Jumlah Mahasiswa per Fakultas\n#plotly\nlibrary(dplyr)\nlibrary(plotly)\n\ndf1 %>%\n  count(faculty, .drop = FALSE) %>%\n  mutate(n_text = paste(scales::number(n, big.mark = \",\"), \"Mahasiswa\")) %>%\n  plot_ly(\n    x = ~n,\n    y = ~faculty,\n    hovertemplate = \"%{hovertext}<extra></extra>\",\n    hovertext = ~n_text,\n    type = \"bar\",\n    orientation = \"h\",\n    name = \"\",\n    marker = list(color = \"steelblue\")\n  ) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"\"),\n    yaxis = list(title = \"\", ticksuffix = \" \", tickfont = list(size = 12))\n  ) %>%\n  config(displayModeBar = F)\n```\n\n### Column {width=\"50%\"}\n```{r}\n#| title: Jumlah Mahasiswa per Program Studi\n# Memuat library yang diperlukan\nlibrary(dplyr)\nlibrary(DT)\n\n# Menghitung jumlah mahasiswa per Program Studi\ndf_table <- df1 %>%\n  count(ProgramStudi, .drop = F) %>%\n  mutate(`Jumlah Mahasiswa` = scales::number(n, big.mark = \",\"))  %>%\n   arrange(desc(n)) %>%\n  select(ProgramStudi, `Jumlah Mahasiswa`)  # Format angka dengan tanda koma\n\n# Menampilkan tabel interaktif dengan DT\ndatatable(\n  df_table,\n  options = list(\n    dom = 't',  # Hanya menampilkan tabel tanpa fitur pencarian dan pagination\n    pageLength = 10,  # Jumlah baris per halaman\n    autoWidth = TRUE  # Menyesuaikan lebar kolom secara otomatis\n  )\n)\n```\n## Row {height=\"50%\"}\n### Column {width=\"50%\".tabset}\n```{r}\n#| title: Proporsi Mahasiswa dengan Gangguan Kepribadian per Fakultas\nlibrary(scales)\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 0)\n# Menghitung total mahasiswa per fakultas dari df1\ntotal_per_fakultas <- df1 %>%\n  count(faculty, .drop = FALSE) %>%\n  rename(total_fakultas = n)\n\n# Menggabungkan dengan df1_abnormal untuk menghitung proporsi abnormal per fakultas dan mengurutkan\ndf_abnormal_plot <- df1_abnormal %>%\n  count(faculty, .drop = FALSE) %>%\n  left_join(total_per_fakultas, by = \"faculty\") %>%\n  mutate(\n    proporsi = n / total_fakultas * 100,  # Menghitung proporsi per fakultas\n    n_text = paste0(round(proporsi, 1), \"%\")  # Menampilkan proporsi dalam format persen\n  ) %>%\n  arrange(proporsi) %>%  # Mengurutkan berdasarkan proporsi\n  mutate(faculty = factor(faculty, levels = unique(faculty)))  # Set factor levels\n\n# Membuat plot dengan pengurutan faculty\ndf_abnormal_plot %>%\n  plot_ly(\n    x = ~proporsi,\n    y = ~faculty,\n    hovertemplate = \"%{hovertext}<extra></extra>\",\n    hovertext = ~n_text,\n    type = \"bar\",\n    orientation = \"h\",\n    name = \"\",\n    marker = list(color = \"steelblue\")\n  ) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"\"),\n    yaxis = list(title = \"\", ticksuffix = \" \", tickfont = list(size = 12))\n  ) %>%\n  config(displayModeBar = F)\n```\n\n```{r}\n#| title: Gangguan Kepribadian Terbanyak\n\n# Menggabungkan dengan df1_abnormal untuk menghitung proporsi abnormal per fakultas dan mengurutkan\ndf1_abnormal <- df_Gangguan %>%\n  filter(rowSums(select(., 4:13) >= 70, na.rm = TRUE) > 0)\nhasil_abnormal <- df1_abnormal %>%\n  summarise(across(4:13, ~sum(. >= 70, na.rm = TRUE)))\n\ndf_abnormal_plot <- data.frame(\n  gangguan = names(hasil_abnormal),\n  jumlah = unlist(hasil_abnormal)/nrow(df1)\n)\n\n# Mengurutkan data berdasarkan jumlah dari besar ke kecil\ndf_abnormal_plot <- df_abnormal_plot %>%\n  arrange(desc(jumlah)) %>%\n  mutate(gangguan = factor(gangguan, levels = rev(gangguan)))  # Menjadikan gangguan sebagai faktor berurut\n\n# Membuat plot interaktif\nplot_ly(\n  data = df_abnormal_plot,\n  x = ~jumlah,\n  y = ~gangguan,\n  type = \"bar\",\n  orientation = \"h\",\n  name = \"\",\n  marker = list(\n    color = ~jumlah,  # Warna berdasarkan nilai\n    colorscale = \"red\"  # Gradasi warna bawaan plotly\n  )\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\", tickfont = list(size = 12)),\n    bargap = 0.2\n  ) %>%\n  config(displayModeBar = FALSE)\n```\n\n# Disorder\n```{r}\ndf_Gangguan$faculty <- df1$faculty\ndf_Gangguan$ProgramStudi <- df1$ProgramStudi\n```\n\n## Row {height=\"60%\".tabset}\n```{r}\n#| title: Proporsi Gangguan Kepribadian per Fakultas\nlibrary(dplyr)\nlibrary(plotly)\n\n# Ubah value di kolom 4 sampai 13 di df_Gangguan, jika >= 70 jadi 1, jika < 70 jadi 0\ndf_Gangguan1 <- df_Gangguan %>%\n  mutate(across(4:13, ~ifelse(. >= 70, 1, 0)))\n\n# Mengubah data ke format long dan menghitung proporsi\ndf_long <- df_Gangguan1 %>%\n  group_by(faculty) %>%\n  summarise(across(3:12, sum, na.rm = TRUE)) %>%\n  pivot_longer(cols = -faculty, names_to = \"gangguan\", values_to = \"value\") %>%\n  group_by(faculty) %>%\n  mutate(proporsi = value / sum(value))  # Menghitung proporsi per gangguan\n\n# Ganti NA di faculty dengan \"NA Fakultas\"\ndf_long$faculty[is.na(df_long$faculty)] <- \"NA\"\n\n# Membuat plot dengan batang bertumpuk berdasarkan proporsi\nplot_ly(\n  data = df_long,\n  x = ~proporsi,\n  y = ~faculty,\n  color = ~gangguan,\n  type = \"bar\"\n) %>%\n  layout(\n    barmode = \"stack\",  # Membuat batang bertumpuk\n    title = \"\",\n    xaxis = list(title = \"\", tickformat = \".0%\"),\n    yaxis = list(title = \"\")\n  ) %>%\n  config(displayModeBar = F)\n```\n\n```{r}\ndf_Gangguan1 <- df_Gangguan %>%\n  mutate(\n  N_Gangguan = rowSums(select(., 4:13) >= 70, na.rm = TRUE)\n  ) %>%\n  select(N_Gangguan, everything()) %>%\n  filter(N_Gangguan > 0)\n```\n\n```{r}\n#| title: Distribusi Gangguan Kepribadian per Fakultas\n# Membuat tabel distribusi\ngangguan_faculty_table <- table(df_Gangguan1$N_Gangguan, df_Gangguan1$faculty)\ngangguan_faculty_df <- as.data.frame(as.table(gangguan_faculty_table))\n\n# Visualisasi dengan ggplot2\nggplot(data = gangguan_faculty_df, aes(Var2, Var1, fill = Freq)) +\n  geom_tile(color = \"white\") +\n   geom_text(aes(label = Freq), color = \"black\", size = 3) +  # Menambahkan label\n  scale_fill_gradient(low = \"lightblue\", high = \"blue\", name = \"Jumlah\") +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Jumlah Gangguan\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 30, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n```{r}\n#| title: Hubungan Gangguan Kepribadian dengan Konstruk Faktor\n# Menghitung matriks korelasi hanya antara df_Gangguan dan df_Faktor\ngangguan_faktor_cor <- cor(\n  as.matrix(df_Gangguan[, 4:13]),  # Kolom-kolom dari df_Gangguan\n  as.matrix(df_Faktor[, 4:10])    # Kolom-kolom dari df_Faktor\n)\n\n# Mengubah matriks korelasi menjadi data frame untuk visualisasi\ncor_df <- as.data.frame(as.table(gangguan_faktor_cor))\nnames(cor_df) <- c(\"Gangguan\", \"Faktor\", \"Correlation\")\n\n# Visualisasi dengan ggplot2\nlibrary(ggplot2)\n\nggplot(cor_df, aes(x = Faktor, y = Gangguan, fill = Correlation)) +\n  geom_tile(color = \"white\") +  # Membuat kotak heatmap\n  geom_text(aes(label = round(Correlation, 2)), color = \"black\", size = 3) +  # Menambahkan label korelasi\n  scale_fill_gradient2(\n    low = \"blue\", mid = \"white\", high = \"red\",\n    midpoint = 0, limits = c(-1, 1),\n    name = \"Korelasi\"\n  ) +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Gangguan Kepribadian\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n\n```{r}\n#| title: Hubungan Gangguan Kepribadian dengan Konstruk Normal 1\n\n# Menghitung matriks korelasi hanya antara df_Gangguan dan df_Faktor\ngangguan_faktor_cor <- cor(\n  as.matrix(df_Gangguan[, 4:13]),  # Kolom-kolom dari df_Gangguan\n  as.matrix(df_Normal[, 4:16])    # Kolom-kolom dari df_Faktor\n)\n\n# Mengubah matriks korelasi menjadi data frame untuk visualisasi\ncor_df <- as.data.frame(as.table(gangguan_faktor_cor))\nnames(cor_df) <- c(\"Gangguan\", \"Faktor\", \"Correlation\")\n\n# Visualisasi dengan ggplot2\nlibrary(ggplot2)\n\nggplot(cor_df, aes(x = Faktor, y = Gangguan, fill = Correlation)) +\n  geom_tile(color = \"white\") +  # Membuat kotak heatmap\n  geom_text(aes(label = round(Correlation, 2)), color = \"black\", size = 3) +  # Menambahkan label korelasi\n  scale_fill_gradient2(\n    low = \"blue\", mid = \"white\", high = \"red\",\n    midpoint = 0, limits = c(-1, 1),\n    name = \"Korelasi\"\n  ) +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Gangguan Kepribadian\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n\n```{r}\n#| title: Hubungan Gangguan Kepribadian dengan Konstruk Normal 2\n\ngangguan_faktor_cor <- cor(\n  as.matrix(df_Gangguan[, 4:13]),  # Kolom-kolom dari df_Gangguan\n  as.matrix(df_Normal[, 17:28])    # Kolom-kolom dari df_Faktor\n)\n\n# Mengubah matriks korelasi menjadi data frame untuk visualisasi\ncor_df <- as.data.frame(as.table(gangguan_faktor_cor))\nnames(cor_df) <- c(\"Gangguan\", \"Faktor\", \"Correlation\")\n\n# Visualisasi dengan ggplot2\nlibrary(ggplot2)\n\nggplot(cor_df, aes(x = Faktor, y = Gangguan, fill = Correlation)) +\n  geom_tile(color = \"white\") +  # Membuat kotak heatmap\n  geom_text(aes(label = round(Correlation, 2)), color = \"black\", size = 3) +  # Menambahkan label korelasi\n  scale_fill_gradient2(\n    low = \"blue\", mid = \"white\", high = \"red\",\n    midpoint = 0, limits = c(-1, 1),\n    name = \"Korelasi\"\n  ) +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Gangguan Kepribadian\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n\n## Row {height=\"40%\"}\n\n```{r}\n#| title: Distribusi Jumlah Kepemilikan Gangguan Berdasarkan Program Studi\n# Membuat tabel distribusi\ngangguan_program_table <- as.data.frame.matrix(table(df_Gangguan1$ProgramStudi,df_Gangguan1$N_Gangguan))\ngangguan_program_table$ProgramStudi <- rownames(gangguan_program_table)\nrownames(gangguan_program_table) <- NULL\ngangguan_program_table <- gangguan_program_table |>\n  select(ProgramStudi, everything())\n# Menampilkan tabel sebagai DataTable interaktif\ndatatable(\n  gangguan_program_table,\n  options = list(\n    dom = 't',  # Hanya menampilkan tabel tanpa fitur pencarian dan pagination\n    pageLength = 10,  # Jumlah baris per halaman (jika pagination diaktifkan)\n    autoWidth = TRUE  # Menyesuaikan lebar kolom secara otomatis\n  )\n)\n```\n\n# Konstruk Normal dan Faktor\n```{r}\ndf_Faktor$faculty <- df1$faculty\ndf_Faktor$ProgramStudi <- df1$ProgramStudi\n```\n## Row {height=\"100%\"}\n### Column {width=\"50%\".tabset}\n#### Agreeableness\n\n```{r}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Klasifikasi dan transformasi data\ndf_Faktor1 <- df_Faktor %>%\n  mutate(across(4:10, ~case_when(\n    . < 35 ~ \"Low\",\n    . >= 35 & . <= 44 ~ \"Low average\",\n    . >= 45 & . <= 55 ~ \"Average\",\n    . >= 56 & . <= 65 ~ \"High average\",\n    . >= 66 ~ \"High\",\n    TRUE ~ NA_character_\n  ))) %>%\n  mutate(across(4:10, ~factor(., levels = c(\"Low\", \"Low average\", \"Average\", \"High average\", \"High\"), ordered = TRUE)))\n```\n\n```{r}\n#| title: Konstruk Faktor - Agreeableness Rendah\n\n# Agreeableness: Cari Yang Rendah\n# Perbaikan kode transformasi data\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Klasifikasi dan transformasi data\ndf_Faktor1 <- df_Faktor %>%\n  mutate(across(4:10, ~case_when(\n    . < 35 ~ \"Low\",\n    . >= 35 & . <= 44 ~ \"Low average\",\n    . >= 45 & . <= 55 ~ \"Average\",\n    . >= 56 & . <= 65 ~ \"High average\",\n    . >= 66 ~ \"High\",\n    TRUE ~ NA_character_\n  ))) %>%\n  mutate(across(4:10, ~factor(., levels = c(\"Low\", \"Low average\", \"Average\", \"High average\", \"High\"), ordered = TRUE)))\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(agreeableness == \"Low\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Agreeableness\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Conscientiousness\n```{r}\n#| title: Konstruk Faktor - Conscientiousness Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(conscientiousness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Extraversion\n\n```{r}\n#| title: Konstruk Faktor - Extraversion Rendah\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(extraversion == \"Low\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Extraversion\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Narcissism\n```{r}\n#| title: Konstruk Faktor - Narcissism Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(narcissism == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Neuroticism\n```{r}\n#| title: Konstruk Faktor - Neuroticism Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(neuroticism == \"High\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Neuroticism\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Openness\n```{r}\n#| title: Konstruk Faktor - Openness Rendah\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(openness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Sensation Seeking\n\n\n```{r}\n#| title: Konstruk Faktor - Sensation Seeking Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sensation_seeking == \"High\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Sensation Seeking\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n### Column {width=\"50%\".tabset}\n```{r}\ndf_Normal$faculty <- df1$faculty\ndf_Normal$ProgramStudi <- df1$ProgramStudi\n```\n```{r}\n# Klasifikasi dan transformasi data\ndf_Normal1 <- df_Normal %>%\n  mutate(across(4:28, ~case_when(\n    . < 35 ~ \"Low\",\n    . >= 35 & . <= 44 ~ \"Low average\",\n    . >= 45 & . <= 55 ~ \"Average\",\n    . >= 56 & . <= 65 ~ \"High average\",\n    . >= 66 ~ \"High\",\n    TRUE ~ NA_character_\n  ))) %>%\n  mutate(across(4:10, ~factor(., levels = c(\"Low\", \"Low average\", \"Average\", \"High average\", \"High\"), ordered = TRUE)))\n```\n\n#### aestheticism {.tabset}\n```{r}\n#| title: Konstruk Normal - Aestheticism Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(aestheticism == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Aestheticism Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(aestheticism == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### ambition {.tabset}\n```{r}\n#| title: Konstruk Normal - Ambition Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(ambition == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Ambition Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(ambition == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### anxiety\n```{r}\n#| title: Konstruk Normal - Anxiety Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(anxiety == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### assertiveness {.tabset}\n```{r}\n#| title: Konstruk Normal - Assertiveness Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(assertiveness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Assertiveness Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(assertiveness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n\n#### conventionality\n```{r}\n#| title: Konstruk Normal - Conventionality Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(conventionality == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### depression\n```{r}\n#| title: Konstruk Normal - Depression Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(depression == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### dutifulness\n```{r}\n#| title: Konstruk Normal - Dutifulness Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(dutifulness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### excitement {.tabset}    \n```{r}\n#| title: Konstruk Normal - Excitement Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(excitement == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Excitement Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(excitement == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Exhibitionism\n```{r}\n#| title: Konstruk Normal - Exhibitionism Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(exhibitionism == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### energy\n```{r}\n#| title: Konstruk Normal - Energy Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(energy == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### flexibility\n```{r}\n#| title: Konstruk Normal - Flexibility Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(flexibility == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### hostility\n```{r}\n#| title: Konstruk Normal - Hostility Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(hostility == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### impulsiveness\n```{r}\n#| title: Konstruk Normal - Impulsiveness Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(impulsiveness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### intellect {.tabset}\n```{r}\n#| title: Konstruk Normal - Intellect Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(intellect == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Intellect Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(intellect == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### irritability      \n```{r}\n#| title: Konstruk Normal - Irritability Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(irritability == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Modesty\n```{r}\n#| title: Konstruk Normal - Modesty Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(modesty == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Moodiness\n```{r}\n#| title: Konstruk Normal - Moodiness Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(moodiness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### orderlines {.tabset}\n```{r}\n#| title: Konstruk Normal - Orderlines Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(orderlines == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Orderlines Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(orderlines == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Self Indulgence\n```{r}\n#| title: Konstruk Normal - Self Indulgence Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(self_indulgence == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Self Reliance\n```{r}\n#| title: Konstruk Normal - Self Reliance Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(self_reliance == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Sincerity\n```{r}\n#| title: Konstruk Normal - Sincerity Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sincerity == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### sociability {.tabset}    \n\n```{r}\n#| title: Konstruk Normal - Sociability Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sociability == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Sociability Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sociability == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### tolerance\n```{r}\n#| title: Konstruk Normal - Tolerance Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(tolerance == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### trustfulness \n```{r}\n#| title: Konstruk Normal - Trustfulness Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(trustfulness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Warmth\n```{r}\n#| title: Konstruk Normal - Warmth Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(warmth == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n# Data\n\nFitur data tidak dapat ditampilkan karena untuk kerahasiaan data. Sebagai gambaran, fitur data menampilkan tabel data nama mahasiswa, fakultas, dan hasil pengukuran dari 28 konstruk kepribadian yang telah diukur secara individu. Tabel data ini juga interaktif, sehingga pengguna dapat melakukan filter data berdasarkan fakultas dan hasil pengukuran atau pencarian nama mahasiswa.\n\n![](data.png)\n","srcMarkdownNoYaml":"\n\n```{r}\nlibrary(shiny)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(DT)\n```\n\n```{r}\n# Memuat data\ndf1 <- read_excel(\"teskepribadian_export_20241021.xlsx\")\n```\n\n```{r}\n# Cek NA\n#sum(is.na(df1$Fakultas))\n#sum(is.na(df1$ProgramStudi))\n```\n\n```{r}\n# Delete data if \"current_distress\", \"variable_response_inconsistency\" >= 70\ndf1 <- df1[!(df1$variable_response_inconsistency >= 70),]\n```\n\n\n```{r}\n# Preproses data - Hapus Kata Fakultas di Kolom Fakultas\ndf1$Fakultas <- gsub(\"Fakultas \", \"\", df1$Fakultas)\n\ndf1 <- df1 |>\n  # Delete duplicate rows if all column values are the same\n  distinct(.keep_all = TRUE)\n\n\n\ndf1[df1$Fakultas == \"Komunikasi Dan Ilmu Sosial\",\"Fakultas\"] <- \"Komunikasi dan Ilmu Sosial\"\n#  unique(df1$ProgramStudi)\n```\n\n\n```{r}\n## Cek jumlah duplikat nrp\nlibrary(dplyr)\n\n# Cari NRP yang duplikat\nduplikat_nrp <- df1 %>%\n  group_by(nrp) %>%\n  filter(n() > 1) %>%\n  ungroup()\n```\n\n```{r}\ndf1_raw <- df1\n# nrow(df1)\n# nrow(duplikat_nrp)\n# df1$nrp\n# df1$name\n# df1$faculty\n# tab(df1[,4:47]\n```\n\n```{r}\n#nrow(df1_raw)\n#nrow(df1)\n#length(unique(df1$faculty))\n#sum(!is.na(df1$faculty))\n```\n#  {.sidebar}\n\nDasbor ini menampilkan statistik untuk:\n\n**Hasil Tes Tipe Kepribadian dan Gangguan Kepribadian Mahasisswa X University**\n\n------------------------------------------------------------------------\n\n|                          |     |\n|--------------------------|-----|\n| **Jumlah Reponden** |  39259 |\n| **Data Valid (VI > 70)**            |  34625 |\n| **Data Valid dan Tidak Duplikat**            |  31667 |\n| **Fakultas**               |  7 |\n| **Program Studi**       |  53 |\n------------------------------------------------------------------------\n\nKeterangan:\n\n- VI = Variable Response Inconsistency\n\n- Dari 31667 terdapat 2495 mahasiswa 2x tes OMNI \n\n::: {.callout-note collapse=\"true\"}\n\n## Disclaimer\n\nInventori Kepribadian OMNI (OMNI Personality Inventory) adalah kuesioner self-report yang mengukur ciri-ciri kepribadian normal dan abnormal pada orang dewasa dan remaja berusia 18â€“74 tahun:\n\n- Jumlah item: 375 item\n- Konstruk Faktor: 7 ciri\n- Konstruk Normal: 25 ciri\n- Gangguan Kepribadian: 10 ciri\n\n[https://doi.org/10.1177/0734282905285789](https://doi.org/10.1177/0734282905285789)\n\n:::\n\n```{r}\ndf1$faculty <- df1$Fakultas\ndf1 <- df1[,-c(1,4)]\n```\n\n```{r}\ndf_Normal <- df1[,c(1:3,4:28)] # Tes Normal\ndf_Gangguan <- df1[,c(1:3,29:38)] # Tes Gangguan\ndf_Faktor <- df1[,c(1:3,39:45)] # Tes Faktor\ndf_Validitas <- df1[,c(1:3,46:47)] # Tes Validitas\n```\n\n# Pengantar\n## Row {height=\"20%\"}\n```{r}\n#| label: Demografi\n#| results: hide\n# Hitung jumlah mahssis tanpa fakutlas\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 0)\nn_total <- nrow(df1)\nn_dis <- nrow(df1_abnormal)\nprop0 <- n_dis / n_total * 100\n\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 1)\nn_total <- nrow(df1)\nn_dis <- nrow(df1_abnormal)\nprop1 <- n_dis / n_total * 100\n\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 4)\nn_total <- nrow(df1)\nn_dis <- nrow(df1_abnormal)\nprop2 <- n_dis / n_total * 100\n```\n\n\n\n```{r}\n#| component: valuebox\n#| title: \"Proporsi Mahasiswa dengan Gangguan Kepribadian (Minimal 1)\"\n\nlist(\n  icon = \"person\",\n  color = \"red\",\n  value = paste0(round(prop0, 1), \"%\",\" \", \"(\", prop0/100*nrow(df1),\")\")\n)\n```\n```{r}\n#| component: valuebox\n#| title: \"Proporsi Mahasiswa dengan >1 Gangguan Kepribadian\"\n\nlist(\n  icon = \"person\",\n  color = \"yellow\",\n  value = paste0(round(prop1, 1), \"%\",\" \", \"(\", prop1/100*nrow(df1),\")\")\n)\n```\n```{r}\n#| component: valuebox\n#| title: \"Proporsi Mahasiswa dengan >4 Gangguan Kepribadian\"\n\nlist(\n  icon = \"person\",\n  color = \"primary\",\n  value = paste0(round(prop2, 1), \"%\",\" \", \"(\", prop2/100*nrow(df1),\")\")\n)\n```\n\n## Row {height=\"80%\"}\n### Column {width=\"40%\"}\n#### Row {height=\"60%\"}\n```{r}\n#| title: Kategori Skor Sifat Normal dan Faktor\n\n## Load necessary library\nlibrary(DT)\n\n# Create a data frame with the translated categories, keeping original column names\ndata <- data.frame(\n  \"Rentang Skor\" = c(\"< 35\", \"35-44\", \"45-55\", \"56-65\", \">65\"),\n  \"Kategori\" = c(\"Rendah\", \"Rata-rata rendah\", \"Rata-rata\", \n                 \"Rata-rata tinggi\", \"Tinggi\"),\n  check.names = FALSE  # Preserve column names with spaces\n)\n\n# Display the table with DT for a visually appealing format\ndatatable(data, \n          options = list(pageLength = 5, # Sets number of rows per page\n                         dom = 't'), # Hides the search bar and pagination,\n          rownames = T) %>% \n  formatStyle(columns = c(\"Rentang Skor\", \"Kategori\"),\n              backgroundColor = styleEqual(c(\"< 35\", \"35-44\", \"45-55\", \"56-65\", \">65\"),\n                                           c( \"#FFD1A1\", \"#FFC081\", \"#FFA561\", \"#FF8E41\", \"#FF6E21\")))\n```\n#### Row {height=\"40%\"}\n```{r}\n#| title: Kategori Skor Gangguan Kepribadian\n\n## Load necessary library\nlibrary(DT)\n\n# Create a data frame with the translated categories, keeping original column names\ndata <- data.frame(\n  \"Rentang Skor\" = c(\"<70\", \">=70\"),\n  \"Kategori\" = c(\"Normal\", \"Gangguan Kepribadian\"),\n  check.names = FALSE  # Preserve column names with spaces\n)\n\n# Display the table with DT for a visually appealing format\ndatatable(data, \n          options = list(pageLength = 5, # Sets number of rows per page\n                         dom = 't'), # Hides the search bar and pagination,\n          rownames = T) %>% \n  formatStyle(columns = c(\"Rentang Skor\", \"Kategori\"),\n              backgroundColor = styleEqual(c(\"<70\", \">=70\"),\n                                           c( \"#FFD1A1\", \"#FF6E21\")))\n```\n\n### Column {width=\"60%\"}\n\n```{r}\n#| title: OMNI Personality Inventory\n# Displaying the image using Markdown syntax\nknitr::include_graphics(\"omni.png\")\n```\n\n# Demografi\n```{r}\n# Seed untuk reproduksi hasil yang sama (opsional)\nset.seed(20250503)\n\n# Buat nama fakultas random\nrandom_fakultas_names <- c(\n  \"Fakultas Sains dan Teknologi\", \"Fakultas Humaniora\", \"Fakultas Kedokteran\",\n  \"Fakultas Pertanian\", \"Fakultas Hukum\", \"Fakultas Psikologi\", \n  \"Fakultas Seni Rupa\"\n)\n\n# Acak urutan nama fakultas random\nfakultas <- unique(df1$faculty)\nrandom_fakultas <- sample(random_fakultas_names, length(fakultas), replace = FALSE)\n\n# Buat mapping dari fakultas asli ke fakultas acak\nfakultas_map <- setNames(random_fakultas, fakultas)\n```\n\n```{r}\n# Membuat nama-nama random untuk program studi\n# Contoh prefiks untuk jenjang pendidikan\njenjang <- c(\"S1\", \"S2\", \"D3\", \"D4\")\n\n# Contoh nama-nama program studi acak\nnama_program <- c(\n  \"Biologi\", \"Matematika\", \"Fisika\", \"Kimia\", \"Astronomi\", \n  \"Akuntansi\", \"Manajemen\", \"Ekonomi\", \"Bisnis Digital\", \"Keuangan\",\n  \"Hukum\", \"Ilmu Politik\", \"Administrasi Publik\", \"Hubungan Internasional\",\n  \"Psikologi\", \"Sosiologi\", \"Antropologi\", \"Arkeologi\", \"Filsafat\",\n  \"Sastra Indonesia\", \"Sastra Inggris\", \"Sastra Jepang\", \"Sastra Mandarin\",\n  \"Kedokteran\", \"Kedokteran Gigi\", \"Farmasi\", \"Kesehatan Masyarakat\", \"Keperawatan\",\n  \"Arsitektur\", \"Teknik Sipil\", \"Teknik Lingkungan\", \"Perencanaan Wilayah\",\n  \"Ilmu Komputer\", \"Sistem Informasi\", \"Teknik Informatika\", \"Data Science\",\n  \"Desain Grafis\", \"Desain Interior\", \"Seni Murni\", \"Fotografi\", \"Animasi\",\n  \"Pertanian\", \"Peternakan\", \"Kehutanan\", \"Perikanan\", \"Agribisnis\",\n  \"Pariwisata\", \"Perhotelan\", \"Kuliner\", \"Media dan Komunikasi\", \"Jurnalistik\"\n)\n\n# Membuat kombinasi random untuk program studi\nprogram_studi <- unique(df1$ProgramStudi)\nsample_jenjang <- sample(jenjang, length(program_studi), replace = TRUE)\nsample_program <- sample(nama_program, length(program_studi), replace = TRUE)\nrandom_program_baru <- paste(sample_jenjang, sample_program)\n\n# Membuat mapping dengan nama-nama baru\nprogram_studi_map_baru <- setNames(random_program_baru, program_studi)\n\n# Terapkan mapping ke dataframe asli\ndf1$faculty <- fakultas_map[df1$faculty]\ndf1$ProgramStudi <- program_studi_map_baru[df1$ProgramStudi]  # atau program_studi_map_baru\n```\n\n## Row {height=\"50%\"}\n### Column {width=\"50%\"}\n```{r}\n#| title: Jumlah Mahasiswa per Fakultas\n#plotly\nlibrary(dplyr)\nlibrary(plotly)\n\ndf1 %>%\n  count(faculty, .drop = FALSE) %>%\n  mutate(n_text = paste(scales::number(n, big.mark = \",\"), \"Mahasiswa\")) %>%\n  plot_ly(\n    x = ~n,\n    y = ~faculty,\n    hovertemplate = \"%{hovertext}<extra></extra>\",\n    hovertext = ~n_text,\n    type = \"bar\",\n    orientation = \"h\",\n    name = \"\",\n    marker = list(color = \"steelblue\")\n  ) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"\"),\n    yaxis = list(title = \"\", ticksuffix = \" \", tickfont = list(size = 12))\n  ) %>%\n  config(displayModeBar = F)\n```\n\n### Column {width=\"50%\"}\n```{r}\n#| title: Jumlah Mahasiswa per Program Studi\n# Memuat library yang diperlukan\nlibrary(dplyr)\nlibrary(DT)\n\n# Menghitung jumlah mahasiswa per Program Studi\ndf_table <- df1 %>%\n  count(ProgramStudi, .drop = F) %>%\n  mutate(`Jumlah Mahasiswa` = scales::number(n, big.mark = \",\"))  %>%\n   arrange(desc(n)) %>%\n  select(ProgramStudi, `Jumlah Mahasiswa`)  # Format angka dengan tanda koma\n\n# Menampilkan tabel interaktif dengan DT\ndatatable(\n  df_table,\n  options = list(\n    dom = 't',  # Hanya menampilkan tabel tanpa fitur pencarian dan pagination\n    pageLength = 10,  # Jumlah baris per halaman\n    autoWidth = TRUE  # Menyesuaikan lebar kolom secara otomatis\n  )\n)\n```\n## Row {height=\"50%\"}\n### Column {width=\"50%\".tabset}\n```{r}\n#| title: Proporsi Mahasiswa dengan Gangguan Kepribadian per Fakultas\nlibrary(scales)\ndf1_abnormal <- df1 %>%\n  filter(rowSums(select(., 29:38) >= 70, na.rm = TRUE) > 0)\n# Menghitung total mahasiswa per fakultas dari df1\ntotal_per_fakultas <- df1 %>%\n  count(faculty, .drop = FALSE) %>%\n  rename(total_fakultas = n)\n\n# Menggabungkan dengan df1_abnormal untuk menghitung proporsi abnormal per fakultas dan mengurutkan\ndf_abnormal_plot <- df1_abnormal %>%\n  count(faculty, .drop = FALSE) %>%\n  left_join(total_per_fakultas, by = \"faculty\") %>%\n  mutate(\n    proporsi = n / total_fakultas * 100,  # Menghitung proporsi per fakultas\n    n_text = paste0(round(proporsi, 1), \"%\")  # Menampilkan proporsi dalam format persen\n  ) %>%\n  arrange(proporsi) %>%  # Mengurutkan berdasarkan proporsi\n  mutate(faculty = factor(faculty, levels = unique(faculty)))  # Set factor levels\n\n# Membuat plot dengan pengurutan faculty\ndf_abnormal_plot %>%\n  plot_ly(\n    x = ~proporsi,\n    y = ~faculty,\n    hovertemplate = \"%{hovertext}<extra></extra>\",\n    hovertext = ~n_text,\n    type = \"bar\",\n    orientation = \"h\",\n    name = \"\",\n    marker = list(color = \"steelblue\")\n  ) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"\"),\n    yaxis = list(title = \"\", ticksuffix = \" \", tickfont = list(size = 12))\n  ) %>%\n  config(displayModeBar = F)\n```\n\n```{r}\n#| title: Gangguan Kepribadian Terbanyak\n\n# Menggabungkan dengan df1_abnormal untuk menghitung proporsi abnormal per fakultas dan mengurutkan\ndf1_abnormal <- df_Gangguan %>%\n  filter(rowSums(select(., 4:13) >= 70, na.rm = TRUE) > 0)\nhasil_abnormal <- df1_abnormal %>%\n  summarise(across(4:13, ~sum(. >= 70, na.rm = TRUE)))\n\ndf_abnormal_plot <- data.frame(\n  gangguan = names(hasil_abnormal),\n  jumlah = unlist(hasil_abnormal)/nrow(df1)\n)\n\n# Mengurutkan data berdasarkan jumlah dari besar ke kecil\ndf_abnormal_plot <- df_abnormal_plot %>%\n  arrange(desc(jumlah)) %>%\n  mutate(gangguan = factor(gangguan, levels = rev(gangguan)))  # Menjadikan gangguan sebagai faktor berurut\n\n# Membuat plot interaktif\nplot_ly(\n  data = df_abnormal_plot,\n  x = ~jumlah,\n  y = ~gangguan,\n  type = \"bar\",\n  orientation = \"h\",\n  name = \"\",\n  marker = list(\n    color = ~jumlah,  # Warna berdasarkan nilai\n    colorscale = \"red\"  # Gradasi warna bawaan plotly\n  )\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\", tickfont = list(size = 12)),\n    bargap = 0.2\n  ) %>%\n  config(displayModeBar = FALSE)\n```\n\n# Disorder\n```{r}\ndf_Gangguan$faculty <- df1$faculty\ndf_Gangguan$ProgramStudi <- df1$ProgramStudi\n```\n\n## Row {height=\"60%\".tabset}\n```{r}\n#| title: Proporsi Gangguan Kepribadian per Fakultas\nlibrary(dplyr)\nlibrary(plotly)\n\n# Ubah value di kolom 4 sampai 13 di df_Gangguan, jika >= 70 jadi 1, jika < 70 jadi 0\ndf_Gangguan1 <- df_Gangguan %>%\n  mutate(across(4:13, ~ifelse(. >= 70, 1, 0)))\n\n# Mengubah data ke format long dan menghitung proporsi\ndf_long <- df_Gangguan1 %>%\n  group_by(faculty) %>%\n  summarise(across(3:12, sum, na.rm = TRUE)) %>%\n  pivot_longer(cols = -faculty, names_to = \"gangguan\", values_to = \"value\") %>%\n  group_by(faculty) %>%\n  mutate(proporsi = value / sum(value))  # Menghitung proporsi per gangguan\n\n# Ganti NA di faculty dengan \"NA Fakultas\"\ndf_long$faculty[is.na(df_long$faculty)] <- \"NA\"\n\n# Membuat plot dengan batang bertumpuk berdasarkan proporsi\nplot_ly(\n  data = df_long,\n  x = ~proporsi,\n  y = ~faculty,\n  color = ~gangguan,\n  type = \"bar\"\n) %>%\n  layout(\n    barmode = \"stack\",  # Membuat batang bertumpuk\n    title = \"\",\n    xaxis = list(title = \"\", tickformat = \".0%\"),\n    yaxis = list(title = \"\")\n  ) %>%\n  config(displayModeBar = F)\n```\n\n```{r}\ndf_Gangguan1 <- df_Gangguan %>%\n  mutate(\n  N_Gangguan = rowSums(select(., 4:13) >= 70, na.rm = TRUE)\n  ) %>%\n  select(N_Gangguan, everything()) %>%\n  filter(N_Gangguan > 0)\n```\n\n```{r}\n#| title: Distribusi Gangguan Kepribadian per Fakultas\n# Membuat tabel distribusi\ngangguan_faculty_table <- table(df_Gangguan1$N_Gangguan, df_Gangguan1$faculty)\ngangguan_faculty_df <- as.data.frame(as.table(gangguan_faculty_table))\n\n# Visualisasi dengan ggplot2\nggplot(data = gangguan_faculty_df, aes(Var2, Var1, fill = Freq)) +\n  geom_tile(color = \"white\") +\n   geom_text(aes(label = Freq), color = \"black\", size = 3) +  # Menambahkan label\n  scale_fill_gradient(low = \"lightblue\", high = \"blue\", name = \"Jumlah\") +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Jumlah Gangguan\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 30, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n```{r}\n#| title: Hubungan Gangguan Kepribadian dengan Konstruk Faktor\n# Menghitung matriks korelasi hanya antara df_Gangguan dan df_Faktor\ngangguan_faktor_cor <- cor(\n  as.matrix(df_Gangguan[, 4:13]),  # Kolom-kolom dari df_Gangguan\n  as.matrix(df_Faktor[, 4:10])    # Kolom-kolom dari df_Faktor\n)\n\n# Mengubah matriks korelasi menjadi data frame untuk visualisasi\ncor_df <- as.data.frame(as.table(gangguan_faktor_cor))\nnames(cor_df) <- c(\"Gangguan\", \"Faktor\", \"Correlation\")\n\n# Visualisasi dengan ggplot2\nlibrary(ggplot2)\n\nggplot(cor_df, aes(x = Faktor, y = Gangguan, fill = Correlation)) +\n  geom_tile(color = \"white\") +  # Membuat kotak heatmap\n  geom_text(aes(label = round(Correlation, 2)), color = \"black\", size = 3) +  # Menambahkan label korelasi\n  scale_fill_gradient2(\n    low = \"blue\", mid = \"white\", high = \"red\",\n    midpoint = 0, limits = c(-1, 1),\n    name = \"Korelasi\"\n  ) +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Gangguan Kepribadian\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n\n```{r}\n#| title: Hubungan Gangguan Kepribadian dengan Konstruk Normal 1\n\n# Menghitung matriks korelasi hanya antara df_Gangguan dan df_Faktor\ngangguan_faktor_cor <- cor(\n  as.matrix(df_Gangguan[, 4:13]),  # Kolom-kolom dari df_Gangguan\n  as.matrix(df_Normal[, 4:16])    # Kolom-kolom dari df_Faktor\n)\n\n# Mengubah matriks korelasi menjadi data frame untuk visualisasi\ncor_df <- as.data.frame(as.table(gangguan_faktor_cor))\nnames(cor_df) <- c(\"Gangguan\", \"Faktor\", \"Correlation\")\n\n# Visualisasi dengan ggplot2\nlibrary(ggplot2)\n\nggplot(cor_df, aes(x = Faktor, y = Gangguan, fill = Correlation)) +\n  geom_tile(color = \"white\") +  # Membuat kotak heatmap\n  geom_text(aes(label = round(Correlation, 2)), color = \"black\", size = 3) +  # Menambahkan label korelasi\n  scale_fill_gradient2(\n    low = \"blue\", mid = \"white\", high = \"red\",\n    midpoint = 0, limits = c(-1, 1),\n    name = \"Korelasi\"\n  ) +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Gangguan Kepribadian\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n\n```{r}\n#| title: Hubungan Gangguan Kepribadian dengan Konstruk Normal 2\n\ngangguan_faktor_cor <- cor(\n  as.matrix(df_Gangguan[, 4:13]),  # Kolom-kolom dari df_Gangguan\n  as.matrix(df_Normal[, 17:28])    # Kolom-kolom dari df_Faktor\n)\n\n# Mengubah matriks korelasi menjadi data frame untuk visualisasi\ncor_df <- as.data.frame(as.table(gangguan_faktor_cor))\nnames(cor_df) <- c(\"Gangguan\", \"Faktor\", \"Correlation\")\n\n# Visualisasi dengan ggplot2\nlibrary(ggplot2)\n\nggplot(cor_df, aes(x = Faktor, y = Gangguan, fill = Correlation)) +\n  geom_tile(color = \"white\") +  # Membuat kotak heatmap\n  geom_text(aes(label = round(Correlation, 2)), color = \"black\", size = 3) +  # Menambahkan label korelasi\n  scale_fill_gradient2(\n    low = \"blue\", mid = \"white\", high = \"red\",\n    midpoint = 0, limits = c(-1, 1),\n    name = \"Korelasi\"\n  ) +\n  labs(\n    title = \"\",\n    x = \"\",\n    y = \"Gangguan Kepribadian\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n\n## Row {height=\"40%\"}\n\n```{r}\n#| title: Distribusi Jumlah Kepemilikan Gangguan Berdasarkan Program Studi\n# Membuat tabel distribusi\ngangguan_program_table <- as.data.frame.matrix(table(df_Gangguan1$ProgramStudi,df_Gangguan1$N_Gangguan))\ngangguan_program_table$ProgramStudi <- rownames(gangguan_program_table)\nrownames(gangguan_program_table) <- NULL\ngangguan_program_table <- gangguan_program_table |>\n  select(ProgramStudi, everything())\n# Menampilkan tabel sebagai DataTable interaktif\ndatatable(\n  gangguan_program_table,\n  options = list(\n    dom = 't',  # Hanya menampilkan tabel tanpa fitur pencarian dan pagination\n    pageLength = 10,  # Jumlah baris per halaman (jika pagination diaktifkan)\n    autoWidth = TRUE  # Menyesuaikan lebar kolom secara otomatis\n  )\n)\n```\n\n# Konstruk Normal dan Faktor\n```{r}\ndf_Faktor$faculty <- df1$faculty\ndf_Faktor$ProgramStudi <- df1$ProgramStudi\n```\n## Row {height=\"100%\"}\n### Column {width=\"50%\".tabset}\n#### Agreeableness\n\n```{r}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Klasifikasi dan transformasi data\ndf_Faktor1 <- df_Faktor %>%\n  mutate(across(4:10, ~case_when(\n    . < 35 ~ \"Low\",\n    . >= 35 & . <= 44 ~ \"Low average\",\n    . >= 45 & . <= 55 ~ \"Average\",\n    . >= 56 & . <= 65 ~ \"High average\",\n    . >= 66 ~ \"High\",\n    TRUE ~ NA_character_\n  ))) %>%\n  mutate(across(4:10, ~factor(., levels = c(\"Low\", \"Low average\", \"Average\", \"High average\", \"High\"), ordered = TRUE)))\n```\n\n```{r}\n#| title: Konstruk Faktor - Agreeableness Rendah\n\n# Agreeableness: Cari Yang Rendah\n# Perbaikan kode transformasi data\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Klasifikasi dan transformasi data\ndf_Faktor1 <- df_Faktor %>%\n  mutate(across(4:10, ~case_when(\n    . < 35 ~ \"Low\",\n    . >= 35 & . <= 44 ~ \"Low average\",\n    . >= 45 & . <= 55 ~ \"Average\",\n    . >= 56 & . <= 65 ~ \"High average\",\n    . >= 66 ~ \"High\",\n    TRUE ~ NA_character_\n  ))) %>%\n  mutate(across(4:10, ~factor(., levels = c(\"Low\", \"Low average\", \"Average\", \"High average\", \"High\"), ordered = TRUE)))\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(agreeableness == \"Low\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Agreeableness\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Conscientiousness\n```{r}\n#| title: Konstruk Faktor - Conscientiousness Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(conscientiousness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Extraversion\n\n```{r}\n#| title: Konstruk Faktor - Extraversion Rendah\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(extraversion == \"Low\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Extraversion\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Narcissism\n```{r}\n#| title: Konstruk Faktor - Narcissism Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(narcissism == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Neuroticism\n```{r}\n#| title: Konstruk Faktor - Neuroticism Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(neuroticism == \"High\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Neuroticism\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Openness\n```{r}\n#| title: Konstruk Faktor - Openness Rendah\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(openness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Sensation Seeking\n\n\n```{r}\n#| title: Konstruk Faktor - Sensation Seeking Tinggi\n\n# Agreeableness: Cari Yang Rendah\n# Menghitung proporsi berdasarkan fakultas\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Faktor1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sensation_seeking == \"High\", na.rm = TRUE) / n()\n  ) %>% \n  mutate(\n    Faktor = \"Sensation Seeking\"\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n### Column {width=\"50%\".tabset}\n```{r}\ndf_Normal$faculty <- df1$faculty\ndf_Normal$ProgramStudi <- df1$ProgramStudi\n```\n```{r}\n# Klasifikasi dan transformasi data\ndf_Normal1 <- df_Normal %>%\n  mutate(across(4:28, ~case_when(\n    . < 35 ~ \"Low\",\n    . >= 35 & . <= 44 ~ \"Low average\",\n    . >= 45 & . <= 55 ~ \"Average\",\n    . >= 56 & . <= 65 ~ \"High average\",\n    . >= 66 ~ \"High\",\n    TRUE ~ NA_character_\n  ))) %>%\n  mutate(across(4:10, ~factor(., levels = c(\"Low\", \"Low average\", \"Average\", \"High average\", \"High\"), ordered = TRUE)))\n```\n\n#### aestheticism {.tabset}\n```{r}\n#| title: Konstruk Normal - Aestheticism Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(aestheticism == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Aestheticism Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(aestheticism == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### ambition {.tabset}\n```{r}\n#| title: Konstruk Normal - Ambition Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(ambition == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Ambition Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(ambition == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### anxiety\n```{r}\n#| title: Konstruk Normal - Anxiety Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(anxiety == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### assertiveness {.tabset}\n```{r}\n#| title: Konstruk Normal - Assertiveness Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(assertiveness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Assertiveness Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(assertiveness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n\n#### conventionality\n```{r}\n#| title: Konstruk Normal - Conventionality Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(conventionality == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### depression\n```{r}\n#| title: Konstruk Normal - Depression Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(depression == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### dutifulness\n```{r}\n#| title: Konstruk Normal - Dutifulness Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(dutifulness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### excitement {.tabset}    \n```{r}\n#| title: Konstruk Normal - Excitement Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(excitement == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Excitement Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(excitement == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Exhibitionism\n```{r}\n#| title: Konstruk Normal - Exhibitionism Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(exhibitionism == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### energy\n```{r}\n#| title: Konstruk Normal - Energy Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(energy == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### flexibility\n```{r}\n#| title: Konstruk Normal - Flexibility Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(flexibility == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### hostility\n```{r}\n#| title: Konstruk Normal - Hostility Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(hostility == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### impulsiveness\n```{r}\n#| title: Konstruk Normal - Impulsiveness Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(impulsiveness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### intellect {.tabset}\n```{r}\n#| title: Konstruk Normal - Intellect Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(intellect == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Intellect Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(intellect == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### irritability      \n```{r}\n#| title: Konstruk Normal - Irritability Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(irritability == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Modesty\n```{r}\n#| title: Konstruk Normal - Modesty Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(modesty == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Moodiness\n```{r}\n#| title: Konstruk Normal - Moodiness Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(moodiness == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### orderlines {.tabset}\n```{r}\n#| title: Konstruk Normal - Orderlines Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(orderlines == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Orderlines Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(orderlines == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Self Indulgence\n```{r}\n#| title: Konstruk Normal - Self Indulgence Tinggi\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(self_indulgence == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### Self Reliance\n```{r}\n#| title: Konstruk Normal - Self Reliance Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(self_reliance == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Sincerity\n```{r}\n#| title: Konstruk Normal - Sincerity Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sincerity == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### sociability {.tabset}    \n\n```{r}\n#| title: Konstruk Normal - Sociability Tinggi\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sociability == \"High\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"#FF6E21\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n```{r}\n#| title: Konstruk Normal - Sociability Rendah\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(sociability == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n#### tolerance\n```{r}\n#| title: Konstruk Normal - Tolerance Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(tolerance == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### trustfulness \n```{r}\n#| title: Konstruk Normal - Trustfulness Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(trustfulness == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n#### Warmth\n```{r}\n#| title: Konstruk Normal - Warmth Rendah\n\n# Menghitung proporsi berdasarkan fakultas\nprop_table <- df_Normal1 %>%\n  group_by(faculty) %>%\n  summarise(\n    Total = n(),\n    Low_Prop = sum(warmth == \"Low\", na.rm = TRUE) / n()\n  )\n# Visualisasi dengan plotly\nplot_ly(\n  data= prop_table,\n  x = ~Low_Prop,\n  y = ~faculty,\n  type = 'bar',\n  marker = list(color = \"steelblue\")\n) %>%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Proporsi\", tickformat = \".0%\"),\n    yaxis = list(title = \"\"),\n    bargap = 0.3,\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = F)\n```\n\n# Data\n\nFitur data tidak dapat ditampilkan karena untuk kerahasiaan data. Sebagai gambaran, fitur data menampilkan tabel data nama mahasiswa, fakultas, dan hasil pengukuran dari 28 konstruk kepribadian yang telah diukur secara individu. Tabel data ini juga interaktif, sehingga pengguna dapat melakukan filter data berdasarkan fakultas dan hasil pengukuran atau pencarian nama mahasiswa.\n\n![](data.png)\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"fig-asp":0.3,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"dashboard_v2_poblishcontent.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.40","page-layout":"custom","theme":["sandstone","themes/dashboard.scss"],"title":"X University","logo":"logods2.webp"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["dashboard"]}